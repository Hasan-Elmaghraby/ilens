// media
@mixin xxs {
  @media only screen and (max-width: 500px) {
    @content;
  }
}

@mixin xs {
  @media only screen and (max-width: 767px) {
    @content;
  }
}

@mixin sm {
  @media only screen and (max-width: 991px) {
    @content;
  }
}

@mixin md {
  @media only screen and (max-width: 1199px) {
    @content;
  }
}
@mixin lg {
  @media only screen and (min-width: 1200px) {
    @content;
  }
}

@mixin dir {
  html[dir="#{$dir}"] & {
    @content;
  }
}

@mixin circle($dimension) {
  border-radius: 50%;
  width: $dimension;
  height: $dimension;
}

@mixin centring() {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin gr_background {
  background: $secondaryColor;
  background: linear-gradient(90deg, $primaryColor 0%, $secondaryColor 100%);
  background-size: 100%;
  color: #fff;
  transition: 0.5s;

  &:hover,
  &:focus {
    background-color: $primaryColor;
    background-position: 100%;
    background-size: 150%;
    color: #fff;
  }
}

@mixin after_gr_background {
  position: relative;

  &::after {
    content: "";
    background: $secondaryColor;
    background: linear-gradient(90deg, $primaryColor 0%, $secondaryColor 100%);
    background-size: 100%;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    transition: 0.5s;
    opacity: 0;
  }

  &:hover {
    &::after {
      opacity: 1;
    }
  }
}

@mixin overlay($color, $opacity) {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba($color, $opacity);
}

@mixin breakpoints($point) {
  @if $point == mobile {
    @media screen and (max-width: 500px) {
      @content;
    }
  } @else if $point == small {
    @media screen and (max-width: 767px) {
      @content;
    }
  } @else if $point == medium {
    @media screen and (max-width: 991px) {
      @content;
    }
  } @else if $point == large {
    @media screen and (max-width: 1199px) {
      @content;
    }
  }
}

@mixin p-bottom($height, $width) {
  padding-bottom: percentage($height/$width);
}

@mixin removeStyleLastElementInRow($iterations, $numberofColumns) {
  @for $i from 1 through $iterations {
    $index: $i * $numberofColumns;
    &:nth-of-type(#{$index}) {
      @content;
    }
  }
}

/// min width screen

@mixin xs_min {
  @media (min-width: 501px) and (max-width: 767px) {
    @content;
  }
}

@mixin sm_min {
  @media (min-width: 768px) and (max-width: 991px) {
    @content;
  }
}

@mixin md_min {
  @media (min-width: 992px) and (max-width: 1199px) {
    @content;
  }
}
